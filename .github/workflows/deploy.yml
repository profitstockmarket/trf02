name: Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'angular.json'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig*.json'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload static assets to S3 (immutable)
        run: |
          ASSETS_DIR="dist/trf02/browser"
          aws s3 sync "$ASSETS_DIR" "s3://${{ vars.S3_BUCKET }}/" \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload index.html to S3 (short cache)
        run: |
          INDEX_FILE="dist/trf02/browser/index.html"
          aws s3 cp "$INDEX_FILE" "s3://${{ vars.S3_BUCKET }}/index.html" \
            --cache-control "public,max-age=60" \
            --content-type "text/html; charset=utf-8"

      - name: Invalidate CloudFront cache
        if: vars.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*"
